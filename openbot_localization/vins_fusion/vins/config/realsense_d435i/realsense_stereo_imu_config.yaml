%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1
num_of_cam: 2  

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/dji/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480

# GPU acceleration
use_gpu         : 0
use_gpu_acc_flow: 0
use_gpu_ceres   : 0

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.9999212117275157, -0.00281774887215442, 0.012232359897886822, 0.0011032579200535662,
          0.0026816525781118185, 0.9999344848756211, 0.011128103880619336, -0.0009226888738622562,
         -0.01226291469546549, -0.011094424177081988, 0.9998632579884871, -0.031976502225528995,
          0.0, 0.0, 0.0, 1.0]       

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.9997008798204915, -0.002965690552873437, 0.024276646508111233, -0.04887415204985392,
           0.0029361899218873777, 0.9999949072046797, 0.00125074115889324, -0.001564022508661417,
          -0.02428023218335852, -0.0011790861921589346, 0.9997044963792419, -0.02646386063267984,
           0.0, 0.0, 0.0, 1.0]


#Multiple thread support
multiple_thread: 4

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 2.9969998951768162e-02          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 4.0812952290478523e-03          # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 1.9785145214137475e-03        # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 3.1054997135881227e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

gyroscope_noise_density: 4.0812952290478523e-03     # [ rad / s / sqrt(Hz) ]   ( gyro "white noise" )
gyroscope_random_walk: 3.1054997135881227e-05      # [ rad / s^2 / sqrt(Hz) ] ( gyro bias diffusion )
accelerometer_noise_density: 2.9969998951768162e-02  # [ m / s^2 / sqrt(Hz) ]   ( accel "white noise" )
accelerometer_random_walk: 1.9785145214137475e-03

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/quandy/workspace/project/openbot/src/VINS-Fusion/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
